{"version":3,"sources":["components/Header.js","components/News.js","components/Home.js","components/NewsDetail.js","components/Footer.js","components/WrongPage.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","Component","state","darkMode","darktStyle","handleSlider","this","setState","render","className","type","name","id","onChange","htmlFor","version","xmlns","width","height","viewBox","d","fill","News","props","Newss","itemsAll","slice","reverse","map","item","index","to","pathname","answer","key","src","image","alt","question","onError","e","target","onerror","Home","isLoaded","option","optionUpper","filtered","filterActive","regionChoosed","scroll","scrollCheck","window","scrollY","handleFilterRegion","handleCloseGlobalFilterRegion","handleChangeRegion","value","currentTarget","getAttribute","valueUpper","toUpperCase","length","componentDidMount","addEventListener","fetch","then","response","ok","Error","status","json","data","catch","error","console","log","componentDidUpdate","prevProps","prevState","componentWillUnmount","removeEventListener","onClick","scrollTo","NewsDetail","alpha3Code","flag","nativeName","borders","Footer","WrongPage","App","routeItems","exact","path","basename","process","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qXAGA,MAAMA,UAAeC,YAAW,eAAD,oBAC7BC,MAAQ,CACNC,UAAU,GAFiB,KAK7BC,WACE,omBAN2B,KAQ7BC,aAAe,KACbC,KAAKC,SAAS,CACZJ,UAAWG,KAAKJ,MAAMC,YAG1BK,SACE,OACE,oCACGF,KAAKJ,MAAMC,SAAW,+BAAQG,KAAKF,YAAsB,KAC1D,4BAAQK,UAAU,UAChB,wBAAIA,UAAU,gBAAd,mBACA,yBAAKA,UAAU,sBACb,2BACEA,UAAU,uBACVC,KAAK,WACLC,KAAK,OACLC,GAAG,OACHC,SAAUP,KAAKD,eAEjB,2BAAOS,QAAQ,OAAOL,UAAU,yBAC9B,yBACEA,UAAU,oBACVM,QAAQ,MACRC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,uCACA,0BACEC,EAAE,wMACFC,KACEf,KAAKJ,MAAMC,SACP,mBACA,wBAIV,0BAAMM,UAAU,qBACbH,KAAKJ,MAAMC,SAAX,+BAUFH,QC9BAsB,G,MA1BDC,IACZ,IAAMC,EAAQD,EAAME,SAASC,MAAM,GAAGC,UAAUC,IAAI,CAACC,EAAMC,IACzD,kBAAC,IAAD,CAAMC,GAAI,CAAEC,SAAS,IAAD,OAAMH,EAAKI,QAAU/B,MAAO,CAAE2B,KAAMA,EAAKI,UAC3D,yBAAKxB,UAAU,cAAcyB,IAAKJ,GAChC,yBAAKrB,UAAU,qBACb,yBACEA,UAAU,uBACV0B,IAAKN,EAAKO,MACVC,IAAKR,EAAKS,SACVC,QAAUC,IAAKA,EAAEC,OAAOC,QAAU,KAChCF,EAAEC,OAAON,IAAI,oHAGnB,yBAAK1B,UAAU,4BACb,wBAAIA,UAAU,wBAAwBoB,EAAKS,cAKnD,OACE,oCACE,yBAAK7B,UAAU,uBAAuBe,M,MCrB5C,MAAMmB,UAAa1C,YAAW,eAAD,oBAC3BC,MAAQ,CACNuB,SAAU,GACVmB,UAAU,EACVC,OAAQ,MACRC,YAAa,GACbC,SAAU,GACVC,cAAc,EACdC,eAAe,EACfC,QAAQ,GATiB,KAkE3BC,YAAc,MAEQ,IADAC,OAAOC,QAAU,IAEnC/C,KAAKC,SAAS,CACZ2C,QAAQ,IAGV5C,KAAKC,SAAS,CACZ2C,QAAQ,KA1Ea,KAgF3BI,mBAAqB,KACnBhD,KAAKC,SAAS,CACZyC,cAAe1C,KAAKJ,MAAM8C,gBAlFH,KAuF3BO,8BAAgC,MACE,IAA5BjD,KAAKJ,MAAM8C,cACb1C,KAAKC,SAAS,CACZyC,cAAc,KA1FO,KAgG3BQ,mBAAsBhB,IACpB,IAAIiB,EAAQjB,EAAEkB,cAAcC,aAAa,SACrCC,EACFH,EAAM/B,MAAM,EAAG,GAAGmC,cAAgBJ,EAAM/B,MAAM,EAAG+B,EAAMK,QACzDxD,KAAKC,SAAS,CACZsC,OAAQY,EACRX,YAAac,EACbX,eAAe,EACfD,cAAc,KA5FlBe,oBAEEX,OAAOY,iBAAiB,SAAU1D,KAAK6C,aAAa,GAEpDc,MAAM,gDACHC,KAAMC,IACL,GAAIA,EAASC,GACX,OAAOD,EAEP,MAAME,MAAMF,EAASG,UAGxBJ,KAAMC,GAAaA,EAASI,QAC5BL,KAAMM,IACLlE,KAAKC,SAAS,CACZkB,SAAU+C,EAAK3C,KACfe,UAAU,MAGb6B,MAAOC,GAAUC,QAAQC,IAAIF,IAGlCG,mBAAmBC,EAAWC,GACxBA,EAAUlC,SAAWvC,KAAKJ,MAAM2C,QAElCoB,MAAM,gDAAD,OAEqB,QAAtB3D,KAAKJ,MAAM2C,OAAmB,GAAK,WAFlC,OAGAvC,KAAKJ,MAAM2C,SAEbqB,KAAMC,IACL,GAAIA,EAASC,GACX,OAAOD,EAEP,MAAME,MAAMF,EAASG,UAGxBJ,KAAMC,GAAaA,EAASI,QAC5BL,KAAMM,IACLlE,KAAKC,SAAS,CACZwC,SAAU,GACVtB,SAAU+C,EAAK3C,KACfe,UAAU,MAGb6B,MAAOC,GAAUC,QAAQC,IAAIF,IAKpCM,uBACE5B,OAAO6B,oBAAoB,SAAU3E,KAAK6C,aAAa,GA6CzD3C,SACE,OACE,yBAAKC,UAAU,OAAOyE,QAAS5E,KAAKiD,+BAClC,yBAAK9C,UAAU,UACb,yBAAKA,UAAU,uBACb,kBAAC,IAAD,CAASsB,GAAG,MACV,0BACEmD,QAAS5E,KAAKgD,mBACd7C,UACEH,KAAKJ,MAAM8C,aACP,qDACA,wDAGL1C,KAAKJ,MAAM+C,cACR3C,KAAKJ,MAAM4C,YACX,sBAEN,wBACErC,UACEH,KAAKJ,MAAM8C,aACP,2BACA,oBAGN,wBACEvC,UAAU,mDACVgD,MAAM,MACNyB,QAAS5E,KAAKkD,oBAHhB,OAOA,wBACE/C,UAAU,sDACVgD,MAAM,QACNyB,QAAS5E,KAAKkD,oBAHhB,SAOA,wBACE/C,UAAU,wDACVgD,MAAM,WACNyB,QAAS5E,KAAKkD,oBAHhB,YAOA,wBACE/C,UAAU,oDACVgD,MAAM,aACNyB,QAAS5E,KAAKkD,oBAHhB,cAOA,wBACE/C,UAAU,sDACVgD,MAAM,gBACNyB,QAAS5E,KAAKkD,oBAHhB,iBAOA,wBACE/C,UAAU,uDACVgD,MAAM,SACNyB,QAAS5E,KAAKkD,oBAHhB,UAOA,wBACE/C,UAAU,uDACVgD,MAAM,UACNyB,QAAS5E,KAAKkD,oBAHhB,WAOA,wBACE/C,UAAU,uDACVgD,MAAM,SACNyB,QAAS5E,KAAKkD,oBAHhB,cAaPlD,KAAKJ,MAAM0C,SACV,kBAAC,EAAD,CACEnB,SAC0B,KAAxBnB,KAAKJ,MAAM6C,SACPzC,KAAKJ,MAAMuB,SACXnB,KAAKJ,MAAM6C,WAInB,yBAAKtC,UAAU,WACb,0BAAMA,UAAU,qBAGpB,yBACEA,UAAWH,KAAKJ,MAAMgD,OAAS,SAAW,KAC1CgC,QAAS,KACP9B,OAAO+B,SAAS,EAAG,KAGrB,uBACE1E,UACEH,KAAKJ,MAAMgD,OAAS,kCAAoC,UASvDP,QC7LAyC,G,MApCK7D,GAEhB,yBAAKd,UAAU,qBACb,yBAAKA,UAAU,2BACb,kBAAC,IAAD,CAAMsB,GAAG,IAAItB,UAAU,WACrB,4BAAQA,UAAU,sCAAlB,UAGJ,yBAAKA,UAAU,mBACb,yBAAKA,UAAU,yBACb,yBACEA,UAAS,6DAAwDc,EAAM8D,YACvElD,IAAKZ,EAAM+D,KACXjD,IAAKd,EAAMZ,QAGf,yBAAKF,UAAU,yBACb,wBAAIA,UAAU,mCAAmCc,EAAMZ,MACvD,wBAAIF,UAAU,gCACZ,wBAAIA,UAAU,mCACZ,wBAAIA,UAAU,sCAAd,gBAGCc,EAAMgE,YAGT,wBAAI9E,UAAU,gBACZ,4BAAQA,UAAU,oBAAoBc,EAAMiE,eCzB3CC,G,MAJA,IACN,4BAAQhF,UAAU,YCOZiF,G,MARG,IAEd,oCACE,gD,MCIN,MAAMC,UAAY1F,YAAW,eAAD,oBAG1BC,MAAQ,CACNuB,SAAU,IAGZsC,oBACEE,MAAM,gDACHC,KAAMC,IACL,GAAIA,EAASC,GACX,OAAOD,EAEP,MAAME,MAAMF,EAASG,UAGxBJ,KAAMC,GAAaA,EAASI,QAC5BL,KAAMM,IACLlE,KAAKC,SAAS,CACZkB,SAAU+C,EAAK3C,SAGlB4C,MAAOC,GAAUC,QAAQC,IAAIF,IAGlClE,SACE,IAAMoF,EAAatF,KAAKJ,MAAMuB,SAASG,IAAI,CAACC,EAAMC,IAChD,kBAAC,IAAD,CACE+D,OAAK,EACLC,KAAI,WAAMjE,EAAKI,QACfC,IAAKJ,EACLtB,OAAQ,IACN,0BAAMC,UAAU,sBACd,kBAAC,EAAD,CACEgB,SAAUnB,KAAKJ,MAAMuB,SACrB6D,KAAMzD,EAAKO,MACXzB,KAAMkB,EAAKS,SACXkD,QAAS3D,EAAKI,OACdoD,WAAYxD,EAAKI,OACjBA,OAAQJ,EAAKI,aAMvB,OACE,kBAAC,IAAD,CAAQ8D,SAAUC,IAChB,oCACE,yBAAKvF,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,MAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEoF,OAAK,EACLC,KAAK,IACLtF,OAAQ,IACN,0BAAMC,UAAU,mBACd,kBAAC,EAAD,MAAS,OAIdmF,EACD,kBAAC,IAAD,CACEpF,OAAQ,IACN,0BAAMC,UAAU,oBACd,kBAAC,EAAD,UAKR,kBAAC,EAAD,WASCkF,QC7EKM,QACW,cAA7B7C,OAAO8C,SAASC,UAEe,UAA7B/C,OAAO8C,SAASC,UAEhB/C,OAAO8C,SAASC,SAASC,MACvB,2DCZNC,IAAS7F,OAAO,kBAAC,EAAD,MAAS8F,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxC,KAAMyC,IAClCA,EAAaC,iB","file":"static/js/main.69c4dde3.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../style/Header.scss'\n\nclass Header extends Component {\n  state = {\n    darkMode: false,\n  }\n\n  darktStyle =\n    'body { background-color: hsl(207, 26%, 17%); } * {color:hsl(0, 0%, 100%);} .header, .footer {background-color: hsl(209, 23%, 22%)} .countryCard__description, .filter__chooseRegion, .filter__dropdown, .filter__searchInput, .scroll, .btn{background-color: hsl(209, 23%, 22%)} .filter__dropdown-item:hover{color:hsl(200, 15%, 8%); background-color: hsl(0,0%,100%);} .countryCard__description {border: 0} *:active, .scroll__arrowUp{color:hsl(0, 0%, 100%);} .scroll, .btn:hover{box-shadow: 0rem 0rem .5rem .2rem rgba(255, 255, 255, 0.4)} .btn:focus{box-shadow: inset 0rem 0rem .5rem .2rem rgba(255, 255, 255, 0.4)}'\n\n  handleSlider = () => {\n    this.setState({\n      darkMode: !this.state.darkMode,\n    })\n  }\n  render() {\n    return (\n      <>\n        {this.state.darkMode ? <style>{this.darktStyle}</style> : null}\n        <header className=\"header\">\n          <h1 className=\"header__logo\">757Live Network</h1>\n          <div className=\"header__changeMode\">\n            <input\n              className=\"header__change-input\"\n              type=\"checkbox\"\n              name=\"mode\"\n              id=\"mode\"\n              onChange={this.handleSlider}\n            />\n            <label htmlFor=\"mode\" className=\"header__darkLightMode\">\n              <svg\n                className=\"header__icon-moon\"\n                version=\"1.1\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"20\"\n                height=\"20\"\n                viewBox=\"0 0 20 20\"\n              >\n                <title>moon</title>\n                <path\n                  d=\"M13.719 1.8c0.686 0.385 1.332 0.867 1.916 1.449 3.42 3.422 3.42 8.966 0 12.386s-8.965 3.42-12.386 0c-0.583-0.584-1.065-1.231-1.449-1.916 3.335 1.867 7.633 1.387 10.469-1.449s3.318-7.134 1.45-10.47z\"\n                  fill={\n                    this.state.darkMode\n                      ? 'hsl(0, 0%, 100%)'\n                      : 'hsl(209, 23%, 22%)'\n                  }\n                ></path>\n              </svg>\n              <span className=\"header__mode-name\">\n                {this.state.darkMode ? `Light Mode` : `Dark Mode`}\n              </span>\n            </label>\n          </div>\n        </header>\n      </>\n    )\n  }\n}\n\nexport default Header\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport '../style/Countries.scss'\n\nconst News = (props) => {\n  const Newss = props.itemsAll.slice(0).reverse().map((item, index) => (\n    <Link to={{ pathname: `/${item.answer}`, state: { item: item.answer } }}>\n      <div className=\"countryCard\" key={index}>\n        <div className=\"countryCard__flag\">\n          <img\n            className=\"countryCard__flagImg\"\n            src={item.image}\n            alt={item.question}\n            onError={(e)=>{e.target.onerror = null;\n              e.target.src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/da/Google_News_icon.svg/200px-Google_News_icon.svg.png\"}}\n          />\n        </div>\n        <div className=\"countryCard__description\">\n          <h1 className=\"countryCard__primary\">{item.question}</h1>\n        </div>\n      </div>\n    </Link>\n  ))\n  return (\n    <>\n      <div className=\"countries-container\">{Newss}</div>\n    </>\n  )\n}\n\nexport default News\n","import React, { Component } from 'react'\nimport { BrowserRouter as NavLink } from 'react-router-dom'\nimport News from '../components/News'\nimport '../style/Home.scss'\nclass Home extends Component {\n  state = {\n    itemsAll: [],\n    isLoaded: false,\n    option: 'all',\n    optionUpper: '',\n    filtered: '',\n    filterActive: false,\n    regionChoosed: false,\n    scroll: false,\n  }\n\n  componentDidMount() {\n    //Nasłuchiwanie scrolla, który umożliwi powrót na początek strony\n    window.addEventListener('scroll', this.scrollCheck, false)\n\n    fetch('https://mnrlive.github.io/api/resources.json')\n      .then((response) => {\n        if (response.ok) {\n          return response\n        } else {\n          throw Error(response.status)\n        }\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          itemsAll: data.item,\n          isLoaded: true,\n        })\n      })\n      .catch((error) => console.log(error))\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.option !== this.state.option) {\n      \n      fetch(\n        `https://mnrlive.github.io/api/resources.json?${\n          this.state.option === 'all' ? '' : 'region/'\n        }${this.state.option}`\n      )\n        .then((response) => {\n          if (response.ok) {\n            return response\n          } else {\n            throw Error(response.status)\n          }\n        })\n        .then((response) => response.json())\n        .then((data) => {\n          this.setState({\n            filtered: '', \n            itemsAll: data.item,\n            isLoaded: true,\n          })\n        })\n        .catch((error) => console.log(error))\n    }\n  }\n\n  //Odmontowanie scrolla\n  componentWillUnmount() {\n    window.removeEventListener('scroll', this.scrollCheck, false)\n  }\n\n  scrollCheck = () => {\n    const beginScroll = window.scrollY < 100\n    if (beginScroll === false) {\n      this.setState({\n        scroll: true,\n      })\n    } else {\n      this.setState({\n        scroll: false,\n      })\n    }\n  }\n\n\n  handleFilterRegion = () => {\n    this.setState({\n      filterActive: !this.state.filterActive,\n    })\n  }\n\n  \n  handleCloseGlobalFilterRegion = () => {\n    if (this.state.filterActive === true) {\n      this.setState({\n        filterActive: false,\n      })\n    }\n  }\n\n  \n  handleChangeRegion = (e) => {\n    let value = e.currentTarget.getAttribute('value')\n    let valueUpper =\n      value.slice(0, 1).toUpperCase() + value.slice(1, value.length)\n    this.setState({\n      option: value,\n      optionUpper: valueUpper,\n      regionChoosed: true,\n      filterActive: false,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"home\" onClick={this.handleCloseGlobalFilterRegion}>\n        <div className=\"filter\">\n          <div className=\"filter__selectPanel\">\n            <NavLink to=\"./\">\n              <span\n                onClick={this.handleFilterRegion}\n                className={\n                  this.state.filterActive\n                    ? 'filter__chooseRegion filter__chooseRegion--caretUp'\n                    : 'filter__chooseRegion filter__chooseRegion--caretDown'\n                }\n              >\n                {this.state.regionChoosed\n                  ? this.state.optionUpper\n                  : 'Filter by Category'}\n              </span>\n              <ul\n                className={\n                  this.state.filterActive\n                    ? 'filter__dropdown visible'\n                    : 'filter__dropdown'\n                }\n              >\n                <li\n                  className=\"filter__dropdown-item filter__dropdown-item--all\"\n                  value=\"all\"\n                  onClick={this.handleChangeRegion}\n                >\n                  All\n                </li>\n                <li\n                  className=\"filter__dropdown-item filter__dropdown-item--africa\"\n                  value=\"World\"\n                  onClick={this.handleChangeRegion}\n                >\n                  World\n                </li>\n                <li\n                  className=\"filter__dropdown-item filter__dropdown-item--americas\"\n                  value=\"Business\"\n                  onClick={this.handleChangeRegion}\n                >\n                  Business\n                </li>\n                <li\n                  className=\"filter__dropdown-item filter__dropdown-item--asia\"\n                  value=\"Technology\"\n                  onClick={this.handleChangeRegion}\n                >\n                  Technology\n                </li>\n                <li\n                  className=\"filter__dropdown-item filter__dropdown-item--europe\"\n                  value=\"Entertainment\"\n                  onClick={this.handleChangeRegion}\n                >\n                  Entertainment\n                </li>\n                <li\n                  className=\"filter__dropdown-item filter__dropdown-item--oceania\"\n                  value=\"Sports\"\n                  onClick={this.handleChangeRegion}\n                >\n                  Sports\n                </li>\n                <li\n                  className=\"filter__dropdown-item filter__dropdown-item--oceania\"\n                  value=\"Science\"\n                  onClick={this.handleChangeRegion}\n                >\n                  Science\n                </li>\n                <li\n                  className=\"filter__dropdown-item filter__dropdown-item--oceania\"\n                  value=\"Health\"\n                  onClick={this.handleChangeRegion}\n                >\n                  Health\n                </li>\n              </ul>\n            </NavLink>\n          </div>\n        </div>\n        {}\n        {}\n        {this.state.isLoaded ? (\n          <News\n            itemsAll={\n              this.state.filtered === ''\n                ? this.state.itemsAll\n                : this.state.filtered\n            }\n          />\n        ) : (\n          <div className=\"loading\">\n            <span className=\"loading__loader\"></span>\n          </div>\n        )}\n        <div\n          className={this.state.scroll ? 'scroll' : null}\n          onClick={() => {\n            window.scrollTo(0, 0)\n          }}\n        >\n          <i\n            className={\n              this.state.scroll ? 'fas fa-arrow-up scroll__arrowUp' : null\n            }\n          ></i>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Home\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport '../style/Country.scss'\n\nconst NewsDetail = (props) => {\n  return (\n    <div className=\"country-container\">\n      <div className=\"country-container__back\">\n        <Link to=\"/\" className=\"navLink\">\n          <button className=\"btn country-container__button-back\">Back</button>\n        </Link>\n      </div>\n      <div className=\"country-details\">\n        <div className=\"country-details__flag\">\n          <img\n            className={`country-details__flagImg country-details__flagImg--${props.alpha3Code}`}\n            src={props.flag}\n            alt={props.name}\n          />\n        </div>\n        <div className=\"country-details__info\">\n          <h1 className=\"country-details__headingPrimary\">{props.name}</h1>\n          <ul className=\"info-list info-list--partOne\">\n            <li className=\"info-item info-item--nativeName\">\n              <h4 className=\"country-details__headingQuaternary\">\n                Native Name:\n              </h4>\n              {props.nativeName}\n            </li>\n\n            <li className=\"borders-item\">\n              <button className=\"btn btn--borders\">{props.borders}</button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default NewsDetail\n","import React from 'react'\nimport '../style/Footer.scss'\nconst Footer = () => {\n  return <footer className=\"footer\"></footer>\n}\n\nexport default Footer\n","import React from 'react'\nimport '../style/WrongPage.scss'\nconst WrongPage = () => {\n  return (\n    <>\n      <h1>Page not Found</h1>\n    </>\n  )\n}\n\nexport default WrongPage\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Header from '../components/Header'\nimport Home from '../components/Home'\nimport Country from '../components/NewsDetail'\nimport Footer from '../components/Footer'\nimport WrongPage from '../components/WrongPage'\nimport '../style/App.scss'\n\nclass App extends Component {\n  \n\n  state = {\n    itemsAll: [],\n  }\n\n  componentDidMount() {\n    fetch('https://mnrlive.github.io/api/resources.json')\n      .then((response) => {\n        if (response.ok) {\n          return response\n        } else {\n          throw Error(response.status)\n        }\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({\n          itemsAll: data.item,\n        })\n      })\n      .catch((error) => console.log(error))\n  }\n\n  render() {\n    const routeItems = this.state.itemsAll.map((item, index) => (\n      <Route\n        exact\n        path={`/${item.answer}`}\n        key={index}\n        render={() => (\n          <main className=\"main main--country\">\n            <Country\n              itemsAll={this.state.itemsAll}\n              flag={item.image}\n              name={item.question}\n              borders={item.answer}\n              alpha3Code={item.answer}\n              answer={item.answer}\n            />\n          </main>\n        )} \n      />\n    ))\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <>\n          <div className=\"App\">\n            <div className=\"container\">\n              <Header />\n\n              <Switch>\n                <Route\n                  exact\n                  path=\"/\"\n                  render={() => (\n                    <main className=\"main main--home\">\n                      <Home />{' '}\n                    </main>\n                  )}\n                />\n                {routeItems}\n                <Route\n                  render={() => (\n                    <main className=\"main main--error\">\n                      <WrongPage />\n                    </main>\n                  )}\n                />\n              </Switch>\n              <Footer />\n            </div>\n          </div>\n        </>\n      </Router>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}